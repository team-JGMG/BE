<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.bobj.funding.mapper.FundingMapper">
  <resultMap id="FundingDetailResultMap" type="org.bobj.funding.dto.FundingDetailResponseDTO">
    <id property="fundingId" column="funding_id"/>
    <result property="propertyId" column="property_id"/>
    <result property="title" column="title"/>
    <result property="address" column="address"/>
    <result property="targetAmount" column="target_amount"/>
    <result property="currentAmount" column="current_amount"/>
    <result property="fundingEndDate" column="funding_end_date"/>
    <result property="currentShareAmount" column="current_share_amount"/>
    <result property="fundingRate" column="funding_rate"/>
    <result property="daysLeft" column="days_left"/>
    <result property="usageDistrict" column="usage_district"/>
    <result property="landArea" column="land_area"/>
    <result property="buildingArea" column="building_area"/>
    <result property="totalFloorAreaProperty" column="total_floor_area_property"/>
    <result property="totalFloorAreaBuilding" column="total_floor_area_building"/>
    <result property="basementFloors" column="basement_floors"/>
    <result property="groundFloors" column="ground_floors"/>
    <result property="approvalDate" column="approval_date"/>
    <result property="officialLandPrice" column="official_land_price"/>
    <result property="unitPricePerPyeong" column="unit_price_per_pyeong"/>
    <result property="description" column="description"/>
    <result property="expectedDividendPerShare" column="expected_dividend_per_share"/>

    <association property="seller" javaType="org.bobj.property.dto.SellerDTO">
      <result property="userId" column="user_id"/>
      <result property="name" column="name"/>
      <result property="email" column="email"/>
      <result property="phone" column="phone"/>
    </association>
    <collection property="photos" ofType="org.bobj.property.domain.PropertyPhotoVO">
      <id property="photoId" column="photo_id"/>
      <result property="propertyId" column="photo_property_id"/>
      <result property="photoUrl" column="photo_url"/>
      <result property="createdAt" column="photo_created_at"/>
    </collection>
    <collection property="tags" ofType="org.bobj.property.domain.HashtagVO" column="property_id"
                select="findHashtagsByPropertyId"/>
  </resultMap>
  <!--  펀딩 상세 조회  -->
  <select id="findFundingById" resultMap="FundingDetailResultMap">
    SELECT
      f.funding_id,
      f.property_id,
      f.target_amount,
      f.current_amount,
      f.current_share_amount,
      f.funding_end_date,
      FLOOR((f.current_amount / f.target_amount) * 100) AS funding_rate,
      DATEDIFF(DATE(f.funding_end_date), DATE(NOW())) AS days_left,
      p.title,
      p.address,
      p.usage_district,
      p.land_area,
      p.building_area,
      p.total_floor_area_property,
      p.total_floor_area_building,
      p.basement_floors,
      p.ground_floors,
      p.approval_date,
      p.official_land_price,
      p.unit_price_per_pyeong,
      p.description,
      CEIL(p.rental_income/f.total_shares) AS expected_dividend_per_share,
      u.user_id,
      u.name,
--       u.email,
--       u.phone,
      ph.photo_id,
      ph.property_id AS photo_property_id,
      ph.photo_url,
      ph.created_at AS photo_created_at
    FROM fundings f
           LEFT JOIN properties p ON f.property_id = p.property_id
           LEFT JOIN users u ON p.user_id = u.user_id
           LEFT JOIN property_photos ph ON p.property_id = ph.property_id
    WHERE f.funding_id = #{fundingId}
  </select>

  <select id="findHashtagsByPropertyId" resultType="org.bobj.property.domain.HashtagVO">
    SELECT h.id, h.name, h.description
    FROM property_hashtags ph
           JOIN hashtags h ON ph.hashtag_id = h.id
    WHERE ph.property_id = #{property_id}
  </select>

  <!-- 펀딩 생성 -->
  <insert id="insertFunding" parameterType="FundingVO">
    INSERT INTO fundings (
      property_id, target_amount,total_shares, funding_end_date
    )
    SELECT
      p.property_id,
      p.price,
      FLOOR(p.price / 5000),
      DATE_ADD(NOW(), INTERVAL p.posting_period MONTH)
    FROM properties p
    WHERE p.property_id = #{propertyId}
  </insert>

  <!-- 펀딩 모집 금액 감소 -->
  <update id="decreaseCurrentAmount">
    UPDATE fundings
        SET current_amount = current_amount - #{orderPrice}
    WHERE funding_id = #{fundingId};
  </update>

  <!-- 펀딩 완료 처리 -->
  <update id="expireFunding">
    UPDATE fundings f
        JOIN funding_order o ON f.funding_id = o.funding_id
        SET
            o.status = 'REFUNDED',
            f.current_amount = 0
    WHERE f.funding_id = #{fundingId}
  </update>

  <resultMap id="FundingTotalResultMap" type="org.bobj.funding.dto.FundingTotalResponseDTO">
    <id property="fundingId" column="funding_id"/>
    <result property="propertyId" column="property_id"/>
    <result property="title" column="title"/>
    <result property="address" column="address"/>
    <result property="cumulativeReturn" column="cumulative_return"/>
    <result property="targetAmount" column="target_amount"/>
    <result property="fundingRate" column="fundingRate"/>
    <result property="daysLeft" column="daysLeft"/>

    <association property="thumbnail" javaType="org.bobj.property.dto.PhotoDTO">
      <result property="photoUrl" column="thumbnail_url"/>
    </association>
    <collection property="tags" ofType="string" column="property_id"
                select="selectHashtagNamesByFundingId"/>
  </resultMap>

  <!-- 펀딩 모집 페이지에서 펀딩 리스트 조회 -->
  <select id="findTotal" resultMap="FundingTotalResultMap">
    SELECT
      f.funding_id,
      f.property_id,
      p.title,
      p.address,
      p.cumulative_return,
      f.target_amount,
      FLOOR((f.current_amount / f.target_amount) * 100) AS fundingRate,
      DATEDIFF(DATE(f.funding_end_date),DATE(NOW())) AS daysLeft,
      (SELECT photo_url
      FROM property_photos
      WHERE property_id = p.property_id
      ORDER BY created_at ASC
      LIMIT 1) AS thumbnail_url
    FROM fundings f
    JOIN properties p ON f.property_id = p.property_id
    WHERE
      <choose>
        <when test="category == 'funding'">
          f.status = 'FUNDING'
        </when>
        <when test="category == 'ended'">
          f.status = 'ENDED'
        </when>
        <when test="category == 'sold'">
          p.status = 'SOLD'
        </when>
      </choose>
    <choose>
      <when test="sort == 'timeLeft'">
        ORDER BY DATEDIFF(DATE(f.funding_end_date),DATE(NOW())) ASC
      </when>
      <when test="sort == 'rate'">
        ORDER BY (f.current_amount / f.target_amount) DESC
      </when>
      <otherwise>
        ORDER BY f.funding_start_date ASC
      </otherwise>
    </choose>
    LIMIT #{limit} OFFSET #{offset}
  </select>

  <!-- 펀딩 성공한 펀딩 리스트 조회 -->
  <select id="findEndedFundingProperties" resultMap="FundingEndedResultMap">
    SELECT f.funding_id, p.title
    FROM fundings f
           JOIN properties p ON f.property_id = p.property_id
    WHERE f.status = 'ENDED'
    ORDER BY f.funding_end_date DESC
    LIMIT #{limit} OFFSET #{offset}
  </select>

  <resultMap id="FundingEndedResultMap" type="org.bobj.funding.dto.FundingEndedResponseDTO">
    <id property="fundingId" column="funding_id"/>
    <result property="title" column="title"/>
    <collection property="tags" ofType="java.lang.String" column="funding_id"
                select="selectHashtagNamesByFundingId"/>
  </resultMap>

  <select id="selectHashtagNamesByFundingId" resultType="string">
    SELECT h.name
    FROM fundings f
           JOIN properties p ON f.property_id = p.property_id
           JOIN property_hashtags ph ON p.property_id = ph.property_id
           JOIN hashtags h ON ph.hashtag_id = h.id
    WHERE f.funding_id = #{fundingId}
  </select>

  <!-- 비관적 락을 이용한 펀딩 정보 조회 -->
  <select id="findByIdWithLock" resultType="org.bobj.funding.domain.FundingVO">
    SELECT funding_id, property_id, target_amount, current_amount, total_shares, status
    FROM fundings
    WHERE funding_id = #{fundingId}
      FOR UPDATE
  </select>

  <!-- 일반 펀딩 정보 조회 -->
  <select id="findById" resultType="org.bobj.funding.domain.FundingVO">
    SELECT funding_id, property_id, target_amount, current_amount, total_shares, status
    FROM fundings
    WHERE funding_id = #{fundingId}
  </select>

    <select id="findAllFundingIds" resultType="java.lang.Long">
      SELECT funding_id FROM fundings
    </select>

    <!-- 펀딩 주문 후 모집 금액 증가 -->
  <update id="increaseCurrentAmount">
    UPDATE fundings
    SET current_amount = current_amount + #{orderPrice}
    WHERE funding_id = #{fundingId};
  </update>

  <!-- 목표 금액 도달 시 상태 ENDED + 마감 날짜 현재로 바꾸는 처리 -->
  <update id="markAsEnded">
    UPDATE fundings
    SET status = 'ENDED',
        funding_end_date = NOW()
    WHERE funding_id = #{fundingId}
  </update>

  <!-- 펀딩 실패인 펀딩 ID 조회 -->
  <select id="findFailedFundingIds" resultType="java.lang.Long">
    <![CDATA[
    SELECT funding_id
    FROM fundings
    WHERE DATE(funding_end_date) < DATE(NOW())
      AND status = 'FUNDING'
      AND current_amount < target_amount
    ]]>
  </select>

  <!-- 펀딩 stauts FAILD로 변경 -->
  <update id="updateFundingStatusToFailed">
    UPDATE fundings
    SET status = 'FAILED'
    WHERE funding_id IN
    <foreach item="id" collection="fundingIds" open="(" separator="," close=")">
      #{id}
    </foreach>
  </update>
  <!-- 펀딩 완료 후 2년된 매물 찾기 -->
  <select id="findSoldFundingIds" resultType="org.bobj.funding.dto.FundingSoldResponseDTO">
    SELECT
      f.funding_id,
      f.property_id
    FROM fundings f
    WHERE DATE(f.funding_end_date) = DATE(DATE_SUB(NOW(), INTERVAL 2 YEAR))
      AND f.status = 'ENDED';
  </select>

</mapper>