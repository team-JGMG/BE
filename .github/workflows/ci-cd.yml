name: CI-CD Pipeline

on:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 멀티스테이지 빌드로 이미지 안에서 WAR 생성 & 해시 출력
      - name: Build and push Docker image (multi-stage + hash)
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          push: true
          tags: yyssjjj/bobj:latest
          no-cache: true
          build-args: |
            GIT_SHA=${{ github.sha }}
            BUILD_TIME=${{ github.run_id }}

      # 이미지 내부 WAR 파일 검증
      - name: Verify WAR inside built image (timestamp + sha256)
        run: |
          echo "✅ Image WAR info:"
          docker pull yyssjjj/bobj:latest
          docker run --rm yyssjjj/bobj:latest ls -l /usr/local/tomcat/webapps/ROOT.war
          echo "✅ Image WAR sha256:"
          docker run --rm yyssjjj/bobj:latest sha256sum /usr/local/tomcat/webapps/ROOT.war
          echo "✅ Image labels:"
          docker image inspect yyssjjj/bobj:latest --format '{{ index .Config.Labels "git_sha" }} {{ index .Config.Labels "build_time" }}'

      - name: Setup SSH key
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.EC2_KEY }}

      - name: Add EC2 to known hosts
        run: ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy with docker-compose (from /home/ubuntu/app)
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_HOST }} <<'EOF'
            echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
            cd /home/ubuntu/app
            docker compose down || true
            docker compose pull
            docker compose up -d
            docker compose ps
            echo "✅ EC2 container WAR info:"
            docker compose exec -T bobj ls -l /usr/local/tomcat/webapps/ROOT.war || true
            echo "✅ EC2 container WAR sha256:"
            docker compose exec -T bobj sha256sum /usr/local/tomcat/webapps/ROOT.war || true
          EOF
