plugins {
    id 'java'
    id 'war'
}

group 'org.bobj'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

ext {
    junitVersion = '5.10.2'
    springVersion = '5.3.37'
    lombokVersion = '1.18.30'
    springSecurityVersion = '5.8.13'
    slf4jVersion = '1.7.36'
    logbackVersion = '1.2.11'
    mybatisVersion = '3.4.6'
    mybatisSpringVersion = '1.3.2'
    h2Version = '2.2.224'
    mysqlVersion = '8.1.0'
    jacksonVersion = '2.15.2'
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}


tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

dependencies {
// 스프링
    implementation ("org.springframework:spring-context:${springVersion}")
            { exclude group: 'commons-logging', module: 'commons-logging' }
    implementation "org.springframework:spring-webmvc:${springVersion}"
    implementation 'javax.inject:javax.inject:1'
    // @Resource 어노테이션을 사용하기 위해 추가한 의존성
    implementation 'javax.annotation:javax.annotation-api:1.3.2'

    // Spring Security
    implementation "org.springframework.security:spring-security-web:${springSecurityVersion}"
    implementation "org.springframework.security:spring-security-config:${springSecurityVersion}"
    implementation "org.springframework.security:spring-security-core:${springSecurityVersion}"
    implementation "org.springframework.security:spring-security-crypto:${springSecurityVersion}"

    //Spring OAuth2
    implementation "org.springframework.security:spring-security-oauth2-client:${springSecurityVersion}"

    // JWT (JSON Web Token) 라이브러리
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // MyBatis
    implementation "org.mybatis:mybatis:${mybatisVersion}"
    implementation "org.mybatis:mybatis-spring:${mybatisSpringVersion}"

    // DB
    implementation 'com.zaxxer:HikariCP:2.7.4'
    implementation "org.springframework:spring-tx:${springVersion}"
    implementation "org.springframework:spring-jdbc:${springVersion}"
    implementation "com.mysql:mysql-connector-j:${mysqlVersion}"

// AOP
    implementation 'org.aspectj:aspectjrt:1.9.20'
    implementation 'org.aspectj:aspectjweaver:1.9.20'

// JSP, SERVLET, JSTL
    implementation('javax.servlet:javax.servlet-api:4.0.1')
    compileOnly 'javax.servlet.jsp:jsp-api:2.1'
    implementation 'javax.servlet:jstl:1.2'

// Log4j2 Logging
    implementation 'org.apache.logging.log4j:log4j-api:2.18.0'
    implementation 'org.apache.logging.log4j:log4j-core:2.18.0'
    implementation 'org.apache.logging.log4j:log4j-slf4j-impl:2.18.0'
    // Logging
    implementation "org.slf4j:slf4j-api:${slf4jVersion}"
//    implementation "ch.qos.logback:logback-classic:${logbackVersion}"


    // Swagger
    implementation 'io.springfox:springfox-swagger2:2.9.2'
    implementation 'io.springfox:springfox-swagger-ui:2.9.2'

    // Jackson - Json/XML 처리
    implementation "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"
    implementation "com.fasterxml.jackson.core:jackson-core:${jacksonVersion}"
    implementation "com.fasterxml.jackson.core:jackson-annotations:${jacksonVersion}"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:${jacksonVersion}"
    // Jackson XML 모듈 (XML 파싱용)
    implementation "com.fasterxml.jackson.dataformat:jackson-dataformat-xml:${jacksonVersion}"

    //Stomp
    implementation "org.springframework:spring-websocket:${springVersion}"
    implementation "org.springframework:spring-messaging:${springVersion}"
    implementation "org.springframework.integration:spring-integration-stomp:5.5.20"


// xml내 한글 처리
    implementation 'xerces:xercesImpl:2.12.2'

    // Lombok
    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    // 테스트
    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
    testImplementation("org.springframework:spring-test:${springVersion}")
    testCompileOnly("org.projectlombok:lombok:${lombokVersion}")
    testAnnotationProcessor("org.projectlombok:lombok:${lombokVersion}")
    testImplementation 'javax.servlet:javax.servlet-api:4.0.1'


}

test {
    useJUnitPlatform()
}